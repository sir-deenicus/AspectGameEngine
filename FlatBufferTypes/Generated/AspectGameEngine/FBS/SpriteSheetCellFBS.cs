// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace AspectGameEngine.FBS
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct SpriteSheetCellFBS : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static SpriteSheetCellFBS GetRootAsSpriteSheetCellFBS(ByteBuffer _bb) { return GetRootAsSpriteSheetCellFBS(_bb, new SpriteSheetCellFBS()); }
  public static SpriteSheetCellFBS GetRootAsSpriteSheetCellFBS(ByteBuffer _bb, SpriteSheetCellFBS obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SpriteSheetCellFBS __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int SheetId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Row { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Column { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<AspectGameEngine.FBS.SpriteSheetCellFBS> CreateSpriteSheetCellFBS(FlatBufferBuilder builder,
      int sheet_id = 0,
      int row = 0,
      int column = 0) {
    builder.StartTable(3);
    SpriteSheetCellFBS.AddColumn(builder, column);
    SpriteSheetCellFBS.AddRow(builder, row);
    SpriteSheetCellFBS.AddSheetId(builder, sheet_id);
    return SpriteSheetCellFBS.EndSpriteSheetCellFBS(builder);
  }

  public static void StartSpriteSheetCellFBS(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddSheetId(FlatBufferBuilder builder, int sheetId) { builder.AddInt(0, sheetId, 0); }
  public static void AddRow(FlatBufferBuilder builder, int row) { builder.AddInt(1, row, 0); }
  public static void AddColumn(FlatBufferBuilder builder, int column) { builder.AddInt(2, column, 0); }
  public static Offset<AspectGameEngine.FBS.SpriteSheetCellFBS> EndSpriteSheetCellFBS(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<AspectGameEngine.FBS.SpriteSheetCellFBS>(o);
  }
}


static public class SpriteSheetCellFBSVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*SheetId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*Row*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*Column*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
