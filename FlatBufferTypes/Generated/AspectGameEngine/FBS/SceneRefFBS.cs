// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace AspectGameEngine.FBS
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct SceneRefFBS : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static SceneRefFBS GetRootAsSceneRefFBS(ByteBuffer _bb) { return GetRootAsSceneRefFBS(_bb, new SceneRefFBS()); }
  public static SceneRefFBS GetRootAsSceneRefFBS(ByteBuffer _bb, SceneRefFBS obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SceneRefFBS __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Path { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPathBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetPathBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetPathArray() { return __p.__vector_as_array<byte>(4); }

  public static Offset<AspectGameEngine.FBS.SceneRefFBS> CreateSceneRefFBS(FlatBufferBuilder builder,
      StringOffset pathOffset = default(StringOffset)) {
    builder.StartTable(1);
    SceneRefFBS.AddPath(builder, pathOffset);
    return SceneRefFBS.EndSceneRefFBS(builder);
  }

  public static void StartSceneRefFBS(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddPath(FlatBufferBuilder builder, StringOffset pathOffset) { builder.AddOffset(0, pathOffset.Value, 0); }
  public static Offset<AspectGameEngine.FBS.SceneRefFBS> EndSceneRefFBS(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<AspectGameEngine.FBS.SceneRefFBS>(o);
  }
}


static public class SceneRefFBSVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*Path*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
