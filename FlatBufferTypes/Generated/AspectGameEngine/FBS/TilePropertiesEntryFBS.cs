// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace AspectGameEngine.FBS
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct TilePropertiesEntryFBS : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static TilePropertiesEntryFBS GetRootAsTilePropertiesEntryFBS(ByteBuffer _bb) { return GetRootAsTilePropertiesEntryFBS(_bb, new TilePropertiesEntryFBS()); }
  public static TilePropertiesEntryFBS GetRootAsTilePropertiesEntryFBS(ByteBuffer _bb, TilePropertiesEntryFBS obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public TilePropertiesEntryFBS __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public AspectGameEngine.FBS.SpriteLocFBS? Key { get { int o = __p.__offset(4); return o != 0 ? (AspectGameEngine.FBS.SpriteLocFBS?)(new AspectGameEngine.FBS.SpriteLocFBS()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public AspectGameEngine.FBS.TilePropertiesFBS? Value { get { int o = __p.__offset(6); return o != 0 ? (AspectGameEngine.FBS.TilePropertiesFBS?)(new AspectGameEngine.FBS.TilePropertiesFBS()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<AspectGameEngine.FBS.TilePropertiesEntryFBS> CreateTilePropertiesEntryFBS(FlatBufferBuilder builder,
      Offset<AspectGameEngine.FBS.SpriteLocFBS> keyOffset = default(Offset<AspectGameEngine.FBS.SpriteLocFBS>),
      Offset<AspectGameEngine.FBS.TilePropertiesFBS> valueOffset = default(Offset<AspectGameEngine.FBS.TilePropertiesFBS>)) {
    builder.StartTable(2);
    TilePropertiesEntryFBS.AddValue(builder, valueOffset);
    TilePropertiesEntryFBS.AddKey(builder, keyOffset);
    return TilePropertiesEntryFBS.EndTilePropertiesEntryFBS(builder);
  }

  public static void StartTilePropertiesEntryFBS(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddKey(FlatBufferBuilder builder, Offset<AspectGameEngine.FBS.SpriteLocFBS> keyOffset) { builder.AddOffset(0, keyOffset.Value, 0); }
  public static void AddValue(FlatBufferBuilder builder, Offset<AspectGameEngine.FBS.TilePropertiesFBS> valueOffset) { builder.AddOffset(1, valueOffset.Value, 0); }
  public static Offset<AspectGameEngine.FBS.TilePropertiesEntryFBS> EndTilePropertiesEntryFBS(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<AspectGameEngine.FBS.TilePropertiesEntryFBS>(o);
  }
}


static public class TilePropertiesEntryFBSVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyTable(tablePos, 4 /*Key*/, AspectGameEngine.FBS.SpriteLocFBSVerify.Verify, false)
      && verifier.VerifyTable(tablePos, 6 /*Value*/, AspectGameEngine.FBS.TilePropertiesFBSVerify.Verify, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
