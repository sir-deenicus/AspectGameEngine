// tile_defs.fbs
namespace AspectGameEngine.FBS; 

// Enums
// FlatBuffers enums can have an underlying type, default is short (int16).
// Use byte for compactness.
enum BiomeFBS : byte {
    None = 0,
    Forest = 1,
    Desert = 2,
    Snow = 3,
    Swamp = 4,
    Mountain = 5,
    Ocean = 6,
    Plains = 7
}

enum TileTypeFBS : byte {
    NullTile = 0,
    Void = 1,
    Wall = 2,
    Floor = 3,
    Ground = 4,
    Door = 5,
    Lever = 6,
    Stairs = 7,
    Water = 8,
    Lava = 9,
    CityOrTown = 10,
    Fixture = 11
}

enum TileOpacityFBS : byte {
    Opaque = 0,
    Transparent = 1,
    Air = 2
}
 
table SpriteLocFBS {
    atlas_index:int;
    row:int;
    column:int;
}

// Complex tile states (extensible via union)
table ClosedDoorStateFBS { 
    locked:bool;
}

union ComplexStateFBS {
    ClosedDoorStateFBS
}

// TileProperties (per tileset entry)
table TilePropertiesFBS {
    walkable:bool;
    interactable:bool;                 
    tile_type:TileTypeFBS;
    health:int;
    description_key:string;            // Reference to a localization key
    biome:BiomeFBS;                    // Using the FBS enum
    tile_opacity:TileOpacityFBS;       // Using the FBS enum    
    destroyed_sprite_loc:SpriteLocFBS; // Optional SpriteLocs (may be null if not set)
    next_state_sprite_loc:SpriteLocFBS;
    complex_state:ComplexStateFBS;     // Optional union; absent => NONE
}

// Key-Value pair for tileset: SpriteLoc -> TileProperties
table TilePropertiesEntryFBS { 
    key:SpriteLocFBS;
    value:TilePropertiesFBS;
}

// Root tileset asset (saved/loaded separately from maps)
table TilePropertiesSetFBS {
    tile_set_name:string (required);
    entries:[TilePropertiesEntryFBS]; // Vector of our key-value pairs
}

root_type TilePropertiesSetFBS;